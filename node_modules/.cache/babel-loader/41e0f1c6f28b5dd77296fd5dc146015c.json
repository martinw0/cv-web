{"ast":null,"code":"import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport translationEN from \"../public/assets/locales/en/translation.json\";\nimport translationFR from \"../public/assets/locales/fr/translation.json\";\nconst fallbackLng = ['en'];\nconst availableLanguages = ['en', 'fr'];\nconst resources = {\n  en: {\n    translation: translationEN\n  },\n  fr: {\n    translation: translationFR\n  }\n};\ni18n.use(Backend) // load translations using http (default public/assets/locals/en/translations)\n.use(LanguageDetector) // detect user language\n.use(initReactI18next) // pass the i18n instance to react-i18next.\n.init({\n  fallbackLng,\n  // fallback language is english.\n  detection: {\n    checkWhitelist: true // options for language detection\n\n  },\n  debug: false,\n  whitelist: availableLanguages,\n  interpolation: {\n    escapeValue: false // no need for react. it escapes by default\n\n  }\n});\nexport default i18n;","map":{"version":3,"names":["i18n","initReactI18next","Backend","LanguageDetector","translationEN","translationFR","fallbackLng","availableLanguages","resources","en","translation","fr","use","init","detection","checkWhitelist","debug","whitelist","interpolation","escapeValue"],"sources":["/Users/martinwallet/Documents/cv-web/src/i18nextConf.js"],"sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport translationEN from \"../public/assets/locales/en/translation.json\";\nimport translationFR from \"../public/assets/locales/fr/translation.json\";\n\nconst fallbackLng = ['en'];\nconst availableLanguages = ['en', 'fr'];\n\nconst resources = {\n    en: {\n      translation: translationEN\n    },\n    fr: {\n      translation: translationFR\n    }\n};\n\ni18n\n  .use(Backend) // load translations using http (default public/assets/locals/en/translations)\n  .use(LanguageDetector) // detect user language\n  .use(initReactI18next) // pass the i18n instance to react-i18next.\n  .init({\n    fallbackLng, // fallback language is english.\n\n    detection: {\n      checkWhitelist: true, // options for language detection\n    },\n\n    debug: false,\n\n    whitelist: availableLanguages,\n\n    interpolation: {\n      escapeValue: false, // no need for react. it escapes by default\n    },\n  });\n\nexport default i18n;"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AAEA,MAAMC,WAAW,GAAG,CAAC,IAAD,CAApB;AACA,MAAMC,kBAAkB,GAAG,CAAC,IAAD,EAAO,IAAP,CAA3B;AAEA,MAAMC,SAAS,GAAG;EACdC,EAAE,EAAE;IACFC,WAAW,EAAEN;EADX,CADU;EAIdO,EAAE,EAAE;IACFD,WAAW,EAAEL;EADX;AAJU,CAAlB;AASAL,IAAI,CACDY,GADH,CACOV,OADP,EACgB;AADhB,CAEGU,GAFH,CAEOT,gBAFP,EAEyB;AAFzB,CAGGS,GAHH,CAGOX,gBAHP,EAGyB;AAHzB,CAIGY,IAJH,CAIQ;EACJP,WADI;EACS;EAEbQ,SAAS,EAAE;IACTC,cAAc,EAAE,IADP,CACa;;EADb,CAHP;EAOJC,KAAK,EAAE,KAPH;EASJC,SAAS,EAAEV,kBATP;EAWJW,aAAa,EAAE;IACbC,WAAW,EAAE,KADA,CACO;;EADP;AAXX,CAJR;AAoBA,eAAenB,IAAf"},"metadata":{},"sourceType":"module"}